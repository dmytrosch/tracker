{"version":3,"sources":["components/Trackers/TrackerItem/TrackerItem.module.css","components/Layout/Layout.module.css","components/TrackerCreator/TrackerCreator.module.css","common/Button/CircleButton.module.css","components/Trackers/TrackersList/TrackerList.module.css","common/Button/CircleButton.js","redux/tracker/tracker.actions.js","components/TrackerCreator/TrackerCreator.js","redux/tracker/tracker.selectors.js","utils/formatDate.js","components/Trackers/TrackerItem/TrackerItem.js","utils/getTimeDistance.js","components/Trackers/TrackersList/TrackersList.js","components/Layout/Layout.js","components/App.js","redux/tracker/tracker.reducer.js","utils/trackerObjectCreator.js","redux/store.js","index.js"],"names":["module","exports","CircleButton","name","props","className","styles","createTracker","createAction","stopTracker","resumeTracker","removeTracker","TrackerCreator","useState","setName","dispatch","useDispatch","onSubmit","event","preventDefault","container","type","onChange","target","value","input","placeholder","getAllTrackersSelector","state","app","trackers","sort","a","b","startedAt","normalizeNumber","number","stringifiedNumber","toString","length","TrackerItem","id","order","timeDistance","setTimeDistance","timeDistanceNumbered","setTimeDistanceNumbered","timerRef","useRef","trackerObj","useSelector","find","tracker","getTrackerByIdSelector","isActive","stoppedOnParsed","useEffect","current","setInterval","distance","difference","stoppedOn","resumedAt","currentDate","Date","now","moment","duration","getTimeDistance","days","hours","minutes","seconds","formatDate","clearInterval","classNames","active","trackerName","rightContainer","onClick","TrackerList","trackersList","TransitionGroup","component","map","item","index","CSSTransition","timeout","Layout","children","header","title","App","createReducer","newObject","uuid","format","newTracker","payload","currentTracker","updatedTracker","filter","reducer","combineReducers","trackersPersistConfig","key","storage","store","configureStore","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.730428f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrackerItem_container__2SLU_\",\"active\":\"TrackerItem_active__3FC-2\",\"rightContainer\":\"TrackerItem_rightContainer__15Ra0\",\"trackerName\":\"TrackerItem_trackerName__3P5gN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__2kkgD\",\"header\":\"Layout_header__7VTpr\",\"title\":\"Layout_title__3YPyF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrackerCreator_container__LM7R3\",\"input\":\"TrackerCreator_input__1hQQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CircleButton_button__1EJYs\",\"createTrackerButton\":\"CircleButton_createTrackerButton__3FIP3 CircleButton_button__1EJYs\",\"trackerItemButtons\":\"CircleButton_trackerItemButtons__2Svru CircleButton_button__1EJYs\",\"pauseButton\":\"CircleButton_pauseButton__2i8dt CircleButton_trackerItemButtons__2Svru CircleButton_button__1EJYs\",\"resumeButton\":\"CircleButton_resumeButton__2QCLH CircleButton_trackerItemButtons__2Svru CircleButton_button__1EJYs\",\"deleteButton\":\"CircleButton_deleteButton__7hNJs CircleButton_trackerItemButtons__2Svru CircleButton_button__1EJYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TrackerList_container__1tkUS\"};","import React from \"react\";\r\nimport styles from \"./CircleButton.module.css\";\r\n\r\nexport default function CircleButton({ name, ...props }) {\r\n    return <button className={styles[name]} {...props} />;\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst createTracker = createAction(\"tracker/create\");\r\nconst stopTracker = createAction(\"tracker/stop\");\r\nconst resumeTracker = createAction(\"tracker/resume\");\r\nconst removeTracker = createAction(\"tracker/remove\");\r\n\r\nexport { createTracker, stopTracker, removeTracker, resumeTracker };\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CircleButton from \"../../common/Button/CircleButton\";\r\nimport { createTracker } from \"../../redux/tracker/tracker.actions\";\r\nimport styles from \"./TrackerCreator.module.css\";\r\n\r\nexport default function TrackerCreator() {\r\n    const [name, setName] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const creatingTrackerHandler = (event) => {\r\n        event.preventDefault();\r\n        dispatch(createTracker(name));\r\n        setName(\"\");\r\n    };\r\n    return (\r\n        <form onSubmit={creatingTrackerHandler} className={styles.container}>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(event) => setName(event.target.value)}\r\n                className={styles.input}\r\n                placeholder=\"Enter tracker name...\"\r\n            />\r\n            <CircleButton name=\"createTrackerButton\" type=\"submit\" />\r\n        </form>\r\n    );\r\n}\r\n","const getAllTrackersSelector = (state) => {\r\n    const arr = [...state.app.trackers];\r\n    return arr.sort((a, b) => b.startedAt - a.startedAt);\r\n};\r\n\r\nconst getTrackerByIdSelector = (id) => (state) =>\r\n    state.app.trackers.find((tracker) => tracker.id === id) || \"\";\r\n\r\nexport { getAllTrackersSelector, getTrackerByIdSelector };\r\n","function normalizeNumber(number) {\r\n    const stringifiedNumber = number.toString();\r\n    return stringifiedNumber.length === 1\r\n        ? 0 + stringifiedNumber\r\n        : stringifiedNumber;\r\n}\r\n\r\nexport default function formatDate(duration) {\r\n    const days = duration.days();\r\n    const hours = duration.hours() + 24 * days;\r\n    const minutes = duration.minutes();\r\n    const seconds = duration.seconds();\r\n    return `${normalizeNumber(hours)}:${normalizeNumber(\r\n        minutes\r\n    )}:${normalizeNumber(seconds)}`;\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    removeTracker,\r\n    resumeTracker,\r\n    stopTracker,\r\n} from \"../../../redux/tracker/tracker.actions\";\r\nimport { getTrackerByIdSelector } from \"../../../redux/tracker/tracker.selectors\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport getTimeDistance from \"../../../utils/getTimeDistance\";\r\nimport styles from \"./TrackerItem.module.css\";\r\nimport CircleButton from \"../../../common/Button/CircleButton\";\r\n\r\nexport default function TrackerItem({ id, order }) {\r\n    const [timeDistance, setTimeDistance] = useState(null);\r\n    const [timeDistanceNumbered, setTimeDistanceNumbered] = useState();\r\n    const timerRef = useRef(null);\r\n    const trackerObj = useSelector(getTrackerByIdSelector(id));\r\n    const { name, isActive, stoppedOnParsed } = trackerObj;\r\n    const dispatch = useDispatch();\r\n    const trackerActivityToggler = () => {\r\n        isActive\r\n            ? dispatch(\r\n                  stopTracker({\r\n                      id,\r\n                      timeDistance: timeDistance.toString(),\r\n                      timeDistanceNumbered,\r\n                  })\r\n              )\r\n            : dispatch(resumeTracker(id));\r\n    };\r\n    const deleteTrackerHandler = () => {\r\n        dispatch(removeTracker(id));\r\n    };\r\n    useEffect(() => {\r\n        if (!isActive) {\r\n            timeDistanceNumbered\r\n                ? clearInterval(timerRef.current)\r\n                : setTimeDistanceNumbered(stoppedOnParsed);\r\n            return;\r\n        }\r\n        timerRef.current = setInterval(() => {\r\n            const distance = getTimeDistance(trackerObj);\r\n            setTimeDistance(distance);\r\n            setTimeDistanceNumbered(formatDate(distance));\r\n        }, 1000);\r\n    }, [isActive]);\r\n    return (\r\n        <li\r\n            className={classNames([\r\n                styles.container,\r\n                isActive && styles.active,\r\n            ])}\r\n        >\r\n            <div className={styles.trackerName}>\r\n                #{order}.&ensp;{name}\r\n            </div>\r\n            <div className={styles.rightContainer}>\r\n                <span>\r\n                    {timeDistanceNumbered ? timeDistanceNumbered : \"00:00:00\"}\r\n                </span>\r\n                <CircleButton\r\n                    name={isActive ? \"pauseButton\" : \"resumeButton\"}\r\n                    onClick={trackerActivityToggler}\r\n                />\r\n                <CircleButton\r\n                    name=\"deleteButton\"\r\n                    onClick={deleteTrackerHandler}\r\n                />\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport default function getTimeDistance({\r\n    startedAt,\r\n    stoppedOn,\r\n    isActive,\r\n    resumedAt,\r\n}) {\r\n    const currentDate = Date.now();\r\n    let difference;\r\n    if (isActive) {\r\n        if (!stoppedOn) {\r\n            difference = currentDate - startedAt;\r\n        } else {\r\n            difference =\r\n                currentDate -\r\n                resumedAt +\r\n                moment.duration(stoppedOn, \"milliseconds\");\r\n        }\r\n    } else {\r\n        difference = stoppedOn;\r\n    }\r\n    const duration = moment.duration(difference, \"milliseconds\");\r\n    return duration;\r\n}\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport TrackerItem from \"../TrackerItem/TrackerItem\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAllTrackersSelector } from \"../../../redux/tracker/tracker.selectors\";\r\nimport styles from \"./TrackerList.module.css\";\r\nimport \"./animation.css\";\r\n\r\nexport default function TrackerList() {\r\n    const trackersList = useSelector(getAllTrackersSelector);\r\n    return (\r\n        <>\r\n            {trackersList.length ? (\r\n                <TransitionGroup component=\"ul\" className={styles.container}>\r\n                    {trackersList.map((item, index) => (\r\n                        <CSSTransition\r\n                            key={item.id}\r\n                            timeout={250}\r\n                            classNames=\"tracker\"\r\n                        >\r\n                            <TrackerItem id={item.id} order={index + 1} />\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            ) : (\r\n                <p>There is not added trackers</p>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nexport default function Layout({ children }) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <header className={styles.header}>\r\n                <h1 className={styles.title}>tracker</h1>\r\n            </header>\r\n            <main>{children}</main>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport TrackerCreator from \"./TrackerCreator/TrackerCreator\";\r\nimport TrackerList from \"./Trackers/TrackersList/TrackersList\";\r\nimport Layout from \"./Layout/Layout\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Layout>\r\n            <TrackerCreator />\r\n            <TrackerList />\r\n        </Layout>\r\n    );\r\n}\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport newTracker from \"../../utils/trackerObjectCreator\";\r\nimport {\r\n    createTracker,\r\n    stopTracker,\r\n    removeTracker,\r\n    resumeTracker,\r\n} from \"./tracker.actions\";\r\n\r\nconst trackers = createReducer([], {\r\n    [createTracker]: (state, { payload: name }) => {\r\n        const newObject = newTracker(name);\r\n        return [...state, newObject];\r\n    },\r\n    [stopTracker]: (\r\n        state,\r\n        { payload: { id, timeDistance, timeDistanceNumbered } }\r\n    ) => {\r\n        const currentTracker = state.find((tracker) => tracker.id === id);\r\n        const updatedTracker = {\r\n            ...currentTracker,\r\n            stoppedOn: timeDistance,\r\n            stoppedOnParsed: timeDistanceNumbered,\r\n            isActive: false,\r\n        };\r\n        const trackers = state.filter((tracker) => tracker.id !== id);\r\n        return [...trackers, updatedTracker];\r\n    },\r\n    [resumeTracker]: (state, { payload: id }) => {\r\n        const currentTracker = state.find((tracker) => tracker.id === id);\r\n        const updatedTracker = {\r\n            ...currentTracker,\r\n            isActive: true,\r\n            resumedAt: Date.now(),\r\n        };\r\n        const trackers = state.filter((tracker) => tracker.id !== id);\r\n        return [...trackers, updatedTracker];\r\n    },\r\n    [removeTracker]: (state, { payload: id }) =>\r\n        state.filter((tracker) => tracker.id !== id),\r\n});\r\nconst reducer = combineReducers({ trackers });\r\n\r\nexport default reducer;\r\n","import moment from \"moment\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n//creating w/o prototype inherit of class\r\nexport default function trackerCreator(name) {\r\n    return {\r\n        id: uuid(),\r\n        name: name\r\n            ? name\r\n            : `Tracker started at ${moment().format(\"kk:mm:ss DD.MM.YYYY\")}`,\r\n        isActive: true,\r\n        startedAt: Date.now(),\r\n        stoppedOn: null,\r\n    };\r\n}\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistReducer,\r\n    persistStore,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport reducer from \"./tracker/tracker.reducer\";\r\n\r\nconst trackersPersistConfig = {\r\n    key: \"trackers\",\r\n    storage,\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: { app: persistReducer(trackersPersistConfig, reducer) },\r\n    middleware: getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport \"./styles/main.css\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading=\"Loading...\" persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}